// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AdminChanged extends ethereum.Event {
  get params(): AdminChanged__Params {
    return new AdminChanged__Params(this);
  }
}

export class AdminChanged__Params {
  _event: AdminChanged;

  constructor(event: AdminChanged) {
    this._event = event;
  }

  get previousAdmin(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newAdmin(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Announcement extends ethereum.Event {
  get params(): Announcement__Params {
    return new Announcement__Params(this);
  }
}

export class Announcement__Params {
  _event: Announcement;

  constructor(event: Announcement) {
    this._event = event;
  }

  get receiver(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get tokenAddress(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get businessTokenAddress(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get pkx(): Bytes {
    return this._event.parameters[4].value.toBytes();
  }

  get ciphertext(): Bytes {
    return this._event.parameters[5].value.toBytes();
  }
}

export class BeaconUpgraded extends ethereum.Event {
  get params(): BeaconUpgraded__Params {
    return new BeaconUpgraded__Params(this);
  }
}

export class BeaconUpgraded__Params {
  _event: BeaconUpgraded;

  constructor(event: BeaconUpgraded) {
    this._event = event;
  }

  get beacon(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Upgraded extends ethereum.Event {
  get params(): Upgraded__Params {
    return new Upgraded__Params(this);
  }
}

export class Upgraded__Params {
  _event: Upgraded;

  constructor(event: Upgraded) {
    this._event = event;
  }

  get implementation(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Contract extends ethereum.SmartContract {
  static bind(address: Address): Contract {
    return new Contract("Contract", address);
  }

  getFee(): BigInt {
    let result = super.call("getFee", "getFee():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getFee", "getFee():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getProceeds(payer: Address): BigInt {
    let result = super.call("getProceeds", "getProceeds(address):(uint256)", [
      ethereum.Value.fromAddress(payer)
    ]);

    return result[0].toBigInt();
  }

  try_getProceeds(payer: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getProceeds",
      "getProceeds(address):(uint256)",
      [ethereum.Value.fromAddress(payer)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getShakescoProceeds(): BigInt {
    let result = super.call(
      "getShakescoProceeds",
      "getShakescoProceeds():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getShakescoProceeds(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getShakescoProceeds",
      "getShakescoProceeds():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  proxiableUUID(): Bytes {
    let result = super.call("proxiableUUID", "proxiableUUID():(bytes32)", []);

    return result[0].toBytes();
  }

  try_proxiableUUID(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "proxiableUUID",
      "proxiableUUID():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get payFee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get owner(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ChangeFeeCall extends ethereum.Call {
  get inputs(): ChangeFeeCall__Inputs {
    return new ChangeFeeCall__Inputs(this);
  }

  get outputs(): ChangeFeeCall__Outputs {
    return new ChangeFeeCall__Outputs(this);
  }
}

export class ChangeFeeCall__Inputs {
  _call: ChangeFeeCall;

  constructor(call: ChangeFeeCall) {
    this._call = call;
  }

  get _newFee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ChangeFeeCall__Outputs {
  _call: ChangeFeeCall;

  constructor(call: ChangeFeeCall) {
    this._call = call;
  }
}

export class ChangeOwnerCall extends ethereum.Call {
  get inputs(): ChangeOwnerCall__Inputs {
    return new ChangeOwnerCall__Inputs(this);
  }

  get outputs(): ChangeOwnerCall__Outputs {
    return new ChangeOwnerCall__Outputs(this);
  }
}

export class ChangeOwnerCall__Inputs {
  _call: ChangeOwnerCall;

  constructor(call: ChangeOwnerCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ChangeOwnerCall__Outputs {
  _call: ChangeOwnerCall;

  constructor(call: ChangeOwnerCall) {
    this._call = call;
  }
}

export class PayerProceedsCall extends ethereum.Call {
  get inputs(): PayerProceedsCall__Inputs {
    return new PayerProceedsCall__Inputs(this);
  }

  get outputs(): PayerProceedsCall__Outputs {
    return new PayerProceedsCall__Outputs(this);
  }
}

export class PayerProceedsCall__Inputs {
  _call: PayerProceedsCall;

  constructor(call: PayerProceedsCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class PayerProceedsCall__Outputs {
  _call: PayerProceedsCall;

  constructor(call: PayerProceedsCall) {
    this._call = call;
  }
}

export class SendEthCall extends ethereum.Call {
  get inputs(): SendEthCall__Inputs {
    return new SendEthCall__Inputs(this);
  }

  get outputs(): SendEthCall__Outputs {
    return new SendEthCall__Outputs(this);
  }
}

export class SendEthCall__Inputs {
  _call: SendEthCall;

  constructor(call: SendEthCall) {
    this._call = call;
  }

  get _recipient(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _pkx(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _ciphertext(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class SendEthCall__Outputs {
  _call: SendEthCall;

  constructor(call: SendEthCall) {
    this._call = call;
  }
}

export class SendToBusinessCall extends ethereum.Call {
  get inputs(): SendToBusinessCall__Inputs {
    return new SendToBusinessCall__Inputs(this);
  }

  get outputs(): SendToBusinessCall__Outputs {
    return new SendToBusinessCall__Outputs(this);
  }
}

export class SendToBusinessCall__Inputs {
  _call: SendToBusinessCall;

  constructor(call: SendToBusinessCall) {
    this._call = call;
  }

  get _recipient(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _businessTokenAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _businessNFTAddress(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _priceAddress(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _pkx(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }

  get _ciphertext(): Bytes {
    return this._call.inputValues[5].value.toBytes();
  }
}

export class SendToBusinessCall__Outputs {
  _call: SendToBusinessCall;

  constructor(call: SendToBusinessCall) {
    this._call = call;
  }
}

export class UpgradeToCall extends ethereum.Call {
  get inputs(): UpgradeToCall__Inputs {
    return new UpgradeToCall__Inputs(this);
  }

  get outputs(): UpgradeToCall__Outputs {
    return new UpgradeToCall__Outputs(this);
  }
}

export class UpgradeToCall__Inputs {
  _call: UpgradeToCall;

  constructor(call: UpgradeToCall) {
    this._call = call;
  }

  get newImplementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpgradeToCall__Outputs {
  _call: UpgradeToCall;

  constructor(call: UpgradeToCall) {
    this._call = call;
  }
}

export class UpgradeToAndCallCall extends ethereum.Call {
  get inputs(): UpgradeToAndCallCall__Inputs {
    return new UpgradeToAndCallCall__Inputs(this);
  }

  get outputs(): UpgradeToAndCallCall__Outputs {
    return new UpgradeToAndCallCall__Outputs(this);
  }
}

export class UpgradeToAndCallCall__Inputs {
  _call: UpgradeToAndCallCall;

  constructor(call: UpgradeToAndCallCall) {
    this._call = call;
  }

  get newImplementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get data(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class UpgradeToAndCallCall__Outputs {
  _call: UpgradeToAndCallCall;

  constructor(call: UpgradeToAndCallCall) {
    this._call = call;
  }
}

export class WithdrawEthFeeCall extends ethereum.Call {
  get inputs(): WithdrawEthFeeCall__Inputs {
    return new WithdrawEthFeeCall__Inputs(this);
  }

  get outputs(): WithdrawEthFeeCall__Outputs {
    return new WithdrawEthFeeCall__Outputs(this);
  }
}

export class WithdrawEthFeeCall__Inputs {
  _call: WithdrawEthFeeCall;

  constructor(call: WithdrawEthFeeCall) {
    this._call = call;
  }

  get _to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class WithdrawEthFeeCall__Outputs {
  _call: WithdrawEthFeeCall;

  constructor(call: WithdrawEthFeeCall) {
    this._call = call;
  }
}
